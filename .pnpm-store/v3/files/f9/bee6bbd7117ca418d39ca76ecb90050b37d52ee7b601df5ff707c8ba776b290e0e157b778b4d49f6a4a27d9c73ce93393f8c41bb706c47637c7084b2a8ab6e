import{composeRefs as e}from"@radix-ui/react-compose-refs";import{composeEventHandlers as t}from"@radix-ui/primitive";import*as r from"react";import o from"@babel/runtime/helpers/esm/extends";export const Slot=/*#__PURE__*/r.forwardRef(((e,t)=>{const{children:l,...i}=e;return 1===r.Children.count(l)?/*#__PURE__*/r.createElement(n,o({},i,{ref:t}),l):/*#__PURE__*/r.createElement(r.Fragment,null,r.Children.map(l,(e=>/*#__PURE__*/r.isValidElement(e)&&e.type===Slottable?/*#__PURE__*/r.createElement(n,o({},i,{ref:t}),e.props.children):e)))}));Slot.displayName="Slot";const n=/*#__PURE__*/r.forwardRef(((t,o)=>{const{children:n,...i}=t,c=r.Children.only(n);/*#__PURE__*/return r.isValidElement(c)?/*#__PURE__*/r.cloneElement(c,{...l(i,c.props),ref:e(o,c.ref)}):null}));n.displayName="SlotClone";export const Slottable=({children:e})=>e;function l(e,r){const o={...r};for(const n in r){const l=e[n],i=r[n];/^on[A-Z]/.test(n)&&(o[n]=t(i,l))}return{...e,...o}}export const Root=Slot;
//# sourceMappingURL=index.module.js.map
