export declare const propGetters: {
    margin: (value: any) => (p: object) => any;
    'margin-top': (value: any) => any;
    'margin-bottom': (value: any) => any;
    'margin-left': (value: any) => any;
    'margin-right': (value: any) => any;
    padding: (value: any) => (p: object) => any;
    'padding-top': (value: any) => any;
    'padding-bottom': (value: any) => any;
    'padding-left': (value: any) => any;
    'padding-right': (value: any) => any;
    gap: (value: any) => (p: object) => any;
    'grid-gap': (value: any) => (p: object) => any;
    'row-gap': (value: any) => any;
    'grid-row-gap': (value: any) => any;
    'column-gap': (value: any) => any;
    'grid-column-gap': (value: any) => any;
    color: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'background-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-top-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-right-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-bottom-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-left-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'outline-color': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    fill: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    stroke: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-radius': (value: any) => (p: object) => any;
    'border-top-left-radius': (value: any) => (p: object) => any;
    'border-top-right-radius': (value: any) => (p: object) => any;
    'border-bottom-right-radius': (value: any) => (p: object) => any;
    'border-bottom-left-radius': (value: any) => (p: object) => any;
    border: (value: any) => any;
    'border-top': (value: any) => any;
    'border-right': (value: any) => any;
    'border-bottom': (value: any) => any;
    'border-left': (value: any) => any;
    'border-width': (value: any) => (p: object) => any;
    'border-top-width': (value: any) => any;
    'border-right-width': (value: any) => any;
    'border-bottom-width': (value: any) => any;
    'border-left-width': (value: any) => any;
    'outline-width': (value: any) => any;
    'border-style': (value: any) => (p: object) => any;
    'border-top-style': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-right-style': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-bottom-style': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'border-left-style': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'outline-style': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'box-shadow': (value: any) => (p: object) => any;
    'text-shadow': (value: any) => (p: object) => any;
    width: (value: any) => any;
    height: (value: any) => any;
    'max-width': (value: any) => any;
    'max-height': (value: any) => any;
    'min-width': (value: any) => any;
    'min-height': (value: any) => any;
    'mask-size': (value: any) => (p: object) => any;
    'z-index': (value: any) => any;
    'font-family': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'font-size': (value: any) => any;
    'line-height': (value: any) => any;
    'font-weight': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'letter-spacing': (value: any) => any;
    transition: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'transition-duration': import("@xstyled/system").ThemeGetter<import("@xstyled/system").DurationGetter>;
    'animation-duration': import("@xstyled/system").ThemeGetter<import("@xstyled/system").DurationGetter>;
    animation: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    top: (value: any) => any;
    right: (value: any) => any;
    bottom: (value: any) => any;
    left: (value: any) => any;
    'animation-timing-function': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'transition-timing-function': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    transform: import("@xstyled/system").ThemeGetter<(string | number) & {}>;
    'transition-property': import("@xstyled/system").ThemeGetter<(string | number) & {}>;
};
