import { SystemProp, ITheme, Theme } from '../types';
declare type RowProp<T extends ITheme> = SystemProp<boolean, T>;
export interface RowProps<T extends ITheme = Theme> {
    row?: RowProp<T>;
    motionSafeRow?: RowProp<T>;
    motionReduceRow?: RowProp<T>;
    firstRow?: RowProp<T>;
    lastRow?: RowProp<T>;
    oddRow?: RowProp<T>;
    evenRow?: RowProp<T>;
    visitedRow?: RowProp<T>;
    checkedRow?: RowProp<T>;
    focusWithinRow?: RowProp<T>;
    hoverRow?: RowProp<T>;
    focusRow?: RowProp<T>;
    focusVisibleRow?: RowProp<T>;
    activeRow?: RowProp<T>;
    disabledRow?: RowProp<T>;
    placeholderRow?: RowProp<T>;
}
export declare const row: import("../types").StyleGenerator;
declare type ColProp<T extends ITheme> = SystemProp<true | 'auto' | string | number, T>;
export interface ColProps<T extends ITheme = Theme> {
    col?: ColProp<T>;
    motionSafeCol?: ColProp<T>;
    motionReduceCol?: ColProp<T>;
    firstCol?: ColProp<T>;
    lastCol?: ColProp<T>;
    oddCol?: ColProp<T>;
    evenCol?: ColProp<T>;
    visitedCol?: ColProp<T>;
    checkedCol?: ColProp<T>;
    focusWithinCol?: ColProp<T>;
    hoverCol?: ColProp<T>;
    focusCol?: ColProp<T>;
    focusVisibleCol?: ColProp<T>;
    activeCol?: ColProp<T>;
    disabledCol?: ColProp<T>;
    placeholderCol?: ColProp<T>;
}
export declare const col: import("../types").StyleGenerator;
export interface FlexboxGridsProps<T extends ITheme = Theme> extends RowProps<T>, ColProps<T> {
}
export declare const flexboxGrids: import("../types").StyleGenerator;
export {};
