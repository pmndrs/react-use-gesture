{"version":3,"file":"util.esm.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable no-console */\nconst DEV = process.env.NODE_ENV !== 'production'\n\n/**\n * Identity function.\n * @param x\n */\nexport const identity = <T>(x: T) => x\n\n/**\n * Check if a value is not null and not undefined.\n * @param n\n */\nexport const is = <T>(n: T): n is Exclude<T, undefined | null> =>\n  n !== undefined && n !== null\n\n/**\n * Check if a value is a number.\n * @param n\n */\nexport const num = (n: any): n is number =>\n  typeof n === 'number' && !Number.isNaN(n)\n\n/**\n * Check if a value is a string.\n * @param n\n */\nexport const string = (n: any): n is Exclude<string, ''> =>\n  typeof n === 'string' && n !== ''\n\n/**\n * Check if a value is an object.\n * @param n\n */\nexport const obj = (n: any): n is object => typeof n === 'object' && n !== null\n\n/**\n * Check if a value is a function.\n * @param n\n */\nexport const func = (n: any): n is Function => typeof n === 'function'\n\n/**\n * Check if a value is a negative number.\n * @param n\n */\nexport const negative = (n: any): n is number => num(n) && n < 0\n\ntype Path = string | number\n\n/**\n * Get a value from an object or an array.\n * @param from\n * @param path\n */\nexport const get = <T>(from: { [key: string]: any } | any[], path: Path): T => {\n  const paths = String(path).split('.')\n  const pathsLength = paths.length\n  let result: any = from\n  for (let i = 0; i < pathsLength; i += 1) {\n    if (result === undefined) return result\n    const path = paths[i]\n    result = is(result[path]) ? result[path] : undefined\n  }\n  return result\n}\n\n/**\n * Assign object into another\n * @param a\n * @param b\n */\nexport const assign = <TObject, TSource>(\n  a: TObject,\n  b: TSource,\n): TObject & TSource => {\n  // @ts-ignore\n  if (!is(b)) return a\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const key in b) {\n    // @ts-ignore\n    a[key] = b[key]\n  }\n  // @ts-ignore\n  return a\n}\n\n/**\n * Merge deeply one object into another.\n * @param a\n * @param b\n */\nexport const merge = <TObject, TSource>(\n  a: TObject,\n  b: TSource,\n): TObject & TSource => {\n  // @ts-ignore\n  if (!is(b)) return a\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in b) {\n    // eslint-disable-next-line no-continue\n    // @ts-ignore\n    if (obj(a[key])) {\n      // @ts-ignore\n      a[key] = merge(assign({}, a[key]), b[key])\n    } else {\n      // @ts-ignore\n      a[key] = b[key]\n    }\n  }\n  // @ts-ignore\n  return a\n}\n\n/**\n * Warn if a condition is not met.\n * @param condition\n * @param message\n */\nexport const warn = (condition: boolean, message: string) => {\n  if (DEV) {\n    if (!condition && console.error) {\n      console.error(message)\n    }\n  }\n}\n\n/**\n * Recursively call a function until getting something that is not a function.\n * @param value\n * @param arg\n */\nexport function cascade(value: any, arg?: any): Exclude<any, Function> {\n  if (typeof value === 'function') {\n    return cascade(value(arg), arg)\n  }\n  return value\n}\n\n/**\n * Get value from theme.\n * @param props\n * @param path\n * @param initial\n */\nexport const getThemeValue = <TProps extends { theme?: any }>(\n  props: TProps,\n  path: Path,\n  initial = props.theme,\n) => cascade(get(initial, path), props)\n\n/**\n * Omit values from an object.\n * @param object\n * @param values\n */\nexport function omit<T extends object, K extends string[]>(\n  object: T,\n  values: K,\n) {\n  const result: { [key: string]: any } = {}\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in object) {\n    if (values.indexOf(key) === -1) {\n      result[key] = object[key]\n    }\n  }\n  return result as Pick<T, Exclude<keyof T, K[number]>>\n}\n\n/* eslint-disable no-continue, no-loop-func, no-cond-assign */\n\n/**\n * Flatten every string together in an array.\n * @param array\n */\nexport function flattenStrings(array: any[]): any[] {\n  return array.reduce((flattenedArray, value) => {\n    const lastIndex = flattenedArray.length - 1\n    const last = flattenedArray[lastIndex]\n    if (typeof last === 'string' && typeof value === 'string') {\n      flattenedArray[lastIndex] = last + value\n    } else {\n      flattenedArray.push(value)\n    }\n    return flattenedArray\n  }, [])\n}\n\nfunction flattenDown(array: any[], result: any[]) {\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenDown(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array.\n * @param array\n */\nexport function flatten(array: any[]) {\n  return flattenDown(array, [])\n}\n"],"names":["DEV","process","env","NODE_ENV","identity","x","is","n","undefined","num","Number","isNaN","string","obj","func","negative","get","from","path","paths","String","split","pathsLength","length","result","i","assign","a","b","key","merge","warn","condition","message","console","error","cascade","value","arg","getThemeValue","props","initial","theme","omit","object","values","indexOf","flattenStrings","array","reduce","flattenedArray","lastIndex","last","push","flattenDown","Array","isArray","flatten"],"mappings":"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"}