import{useComposedRefs as e}from"@radix-ui/react-compose-refs";import*as n from"react";export const Presence=r=>{const{present:u,children:o}=r,s=function(e){const[r,u]=n.useState(),o=n.useRef({}),s=n.useRef(e),i=n.useRef(),c=e?"mounted":"unmounted",[a,d]=function(e,t){return n.useReducer(((e,n)=>{const r=t[e][n];return null!=r?r:e}),e)}(c,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return n.useEffect((()=>{const n=o.current,r=s.current;if(r!==e){const u=i.current,o=t(n);if(e)d("MOUNT");else if("none"===o||"none"===(null==n?void 0:n.display))d("UNMOUNT");else{const e=u!==o;d(r&&e?"ANIMATION_OUT":"UNMOUNT")}s.current=e}}),[e,d]),n.useEffect((()=>{if(r){const e=e=>{const n=t(o.current).includes(e.animationName);e.target===r&&n&&d("ANIMATION_END")},n=e=>{e.target===r&&(i.current=t(o.current))};return r.addEventListener("animationstart",n),r.addEventListener("animationcancel",e),r.addEventListener("animationend",e),()=>{r.removeEventListener("animationstart",n),r.removeEventListener("animationcancel",e),r.removeEventListener("animationend",e)}}}),[r,d]),{isPresent:["mounted","unmountSuspended"].includes(a),ref:n.useCallback((e=>{e&&(o.current=getComputedStyle(e),u(e))}),[])}}(u),i="function"==typeof o?o({present:s.isPresent}):n.Children.only(o),c=e(s.ref,i.ref);return"function"==typeof o||s.isPresent?/*#__PURE__*/n.cloneElement(i,{ref:c}):null};function t(e){return(null==e?void 0:e.animationName)||"none"}Presence.displayName="Presence";
//# sourceMappingURL=index.module.js.map
