{"version":3,"file":"util.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable no-console */\nconst DEV = process.env.NODE_ENV !== 'production'\n\n/**\n * Identity function.\n * @param x\n */\nexport const identity = <T>(x: T) => x\n\n/**\n * Check if a value is not null and not undefined.\n * @param n\n */\nexport const is = <T>(n: T): n is Exclude<T, undefined | null> =>\n  n !== undefined && n !== null\n\n/**\n * Check if a value is a number.\n * @param n\n */\nexport const num = (n: any): n is number =>\n  typeof n === 'number' && !Number.isNaN(n)\n\n/**\n * Check if a value is a string.\n * @param n\n */\nexport const string = (n: any): n is Exclude<string, ''> =>\n  typeof n === 'string' && n !== ''\n\n/**\n * Check if a value is an object.\n * @param n\n */\nexport const obj = (n: any): n is object => typeof n === 'object' && n !== null\n\n/**\n * Check if a value is a function.\n * @param n\n */\nexport const func = (n: any): n is Function => typeof n === 'function'\n\n/**\n * Check if a value is a negative number.\n * @param n\n */\nexport const negative = (n: any): n is number => num(n) && n < 0\n\ntype Path = string | number\n\n/**\n * Get a value from an object or an array.\n * @param from\n * @param path\n */\nexport const get = <T>(from: { [key: string]: any } | any[], path: Path): T => {\n  const paths = String(path).split('.')\n  const pathsLength = paths.length\n  let result: any = from\n  for (let i = 0; i < pathsLength; i += 1) {\n    if (result === undefined) return result\n    const path = paths[i]\n    result = is(result[path]) ? result[path] : undefined\n  }\n  return result\n}\n\n/**\n * Assign object into another\n * @param a\n * @param b\n */\nexport const assign = <TObject, TSource>(\n  a: TObject,\n  b: TSource,\n): TObject & TSource => {\n  // @ts-ignore\n  if (!is(b)) return a\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const key in b) {\n    // @ts-ignore\n    a[key] = b[key]\n  }\n  // @ts-ignore\n  return a\n}\n\n/**\n * Merge deeply one object into another.\n * @param a\n * @param b\n */\nexport const merge = <TObject, TSource>(\n  a: TObject,\n  b: TSource,\n): TObject & TSource => {\n  // @ts-ignore\n  if (!is(b)) return a\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in b) {\n    // eslint-disable-next-line no-continue\n    // @ts-ignore\n    if (obj(a[key])) {\n      // @ts-ignore\n      a[key] = merge(assign({}, a[key]), b[key])\n    } else {\n      // @ts-ignore\n      a[key] = b[key]\n    }\n  }\n  // @ts-ignore\n  return a\n}\n\n/**\n * Warn if a condition is not met.\n * @param condition\n * @param message\n */\nexport const warn = (condition: boolean, message: string) => {\n  if (DEV) {\n    if (!condition && console.error) {\n      console.error(message)\n    }\n  }\n}\n\n/**\n * Recursively call a function until getting something that is not a function.\n * @param value\n * @param arg\n */\nexport function cascade(value: any, arg?: any): Exclude<any, Function> {\n  if (typeof value === 'function') {\n    return cascade(value(arg), arg)\n  }\n  return value\n}\n\n/**\n * Get value from theme.\n * @param props\n * @param path\n * @param initial\n */\nexport const getThemeValue = <TProps extends { theme?: any }>(\n  props: TProps,\n  path: Path,\n  initial = props.theme,\n) => cascade(get(initial, path), props)\n\n/**\n * Omit values from an object.\n * @param object\n * @param values\n */\nexport function omit<T extends object, K extends string[]>(\n  object: T,\n  values: K,\n) {\n  const result: { [key: string]: any } = {}\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in object) {\n    if (values.indexOf(key) === -1) {\n      result[key] = object[key]\n    }\n  }\n  return result as Pick<T, Exclude<keyof T, K[number]>>\n}\n\n/* eslint-disable no-continue, no-loop-func, no-cond-assign */\n\n/**\n * Flatten every string together in an array.\n * @param array\n */\nexport function flattenStrings(array: any[]): any[] {\n  return array.reduce((flattenedArray, value) => {\n    const lastIndex = flattenedArray.length - 1\n    const last = flattenedArray[lastIndex]\n    if (typeof last === 'string' && typeof value === 'string') {\n      flattenedArray[lastIndex] = last + value\n    } else {\n      flattenedArray.push(value)\n    }\n    return flattenedArray\n  }, [])\n}\n\nfunction flattenDown(array: any[], result: any[]) {\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenDown(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array.\n * @param array\n */\nexport function flatten(array: any[]) {\n  return flattenDown(array, [])\n}\n"],"names":["is","n","num","Number","isNaN","obj","get","from","path","paths","String","split","pathsLength","length","result","i","undefined","assign","a","b","key","cascade","value","arg","array","flattenDown","Array","isArray","push","reduce","flattenedArray","lastIndex","last","props","initial","theme","x","merge","object","values","indexOf","condition","message"],"mappings":"wEAaaA,EAAK,SAAIC,UACpBA,MAAAA,GAMWC,EAAM,SAACD,SACL,iBAANA,IAAmBE,OAAOC,MAAMH,IAa5BI,EAAM,SAACJ,SAAqC,iBAANA,GAAwB,OAANA,GAqBxDK,EAAM,SAAIC,EAAsCC,WACrDC,EAAQC,OAAOF,GAAMG,MAAM,KAC3BC,EAAcH,EAAMI,OACtBC,EAAcP,EACTQ,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EAAG,SACxBC,IAAXF,EAAsB,OAAOA,MAC3BN,EAAOC,EAAMM,GACnBD,EAASd,EAAGc,EAAON,IAASM,EAAON,QAAQQ,SAEtCF,GAQIG,EAAS,SACpBC,EACAC,OAGKnB,EAAGmB,GAAI,OAAOD,MAEd,IAAME,KAAOD,EAEhBD,EAAEE,GAAOD,EAAEC,UAGNF,YAgDOG,EAAQC,EAAYC,SACb,mBAAVD,EACFD,EAAQC,EAAMC,GAAMA,GAEtBD,8DAuEeE,UAlBxB,SAASC,EAAYD,EAAcV,OAC5B,IAAIC,EAAI,EAAGA,EAAIS,EAAMX,OAAQE,IAAK,KAC/BO,EAAQE,EAAMT,GAEhBW,MAAMC,QAAQL,GAChBG,EAAYH,EAAOR,GAEnBA,EAAOc,KAAKN,UAITR,EAQAW,CAAYD,EAAO,qCAhCGA,UACtBA,EAAMK,QAAO,SAACC,EAAgBR,OAC7BS,EAAYD,EAAejB,OAAS,EACpCmB,EAAOF,EAAeC,SACR,iBAATC,GAAsC,iBAAVV,EACrCQ,EAAeC,GAAaC,EAAOV,EAEnCQ,EAAeF,KAAKN,GAEfQ,IACN,kBAlJe,SAAC7B,SAAuC,mBAANA,uCAyGzB,SAC3BgC,EACAzB,EACA0B,mBAAAA,IAAAA,EAAUD,EAAME,OACbd,EAAQf,EAAI4B,EAAS1B,GAAOyB,qBA9IT,SAAIG,UAASA,8BAqFhB,SAARC,EACXnB,EACAC,OAGKnB,EAAGmB,GAAI,OAAOD,MAEd,IAAME,KAAOD,EAKdD,EAAEE,GAFAf,EAAIa,EAAEE,IAECiB,EAAMpB,EAAO,GAAIC,EAAEE,IAAOD,EAAEC,IAG5BD,EAAEC,UAIRF,oBAjEe,SAACjB,UAAwBC,EAAID,IAAMA,EAAI,qDA+G7DqC,EACAC,OAEMzB,EAAiC,OAElC,IAAMM,KAAOkB,GACa,IAAzBC,EAAOC,QAAQpB,KACjBN,EAAOM,GAAOkB,EAAOlB,WAGlBN,kBA5Ia,SAACb,SACR,iBAANA,GAAwB,KAANA,gBA2FP,SAACwC,EAAoBC"}