export declare const getDefaultTheme: () => {
    colors: {
        elevation1: string;
        elevation2: string;
        elevation3: string;
        accent1: string;
        accent2: string;
        accent3: string;
        highlight1: string;
        highlight2: string;
        highlight3: string;
        vivid1: string;
        folderWidgetColor: string;
        folderTextColor: string;
        toolTipBackground: string;
        toolTipText: string;
    };
    radii: {
        xs: string;
        sm: string;
        lg: string;
    };
    space: {
        xs: string;
        sm: string;
        md: string;
        rowGap: string;
        colGap: string;
    };
    fonts: {
        mono: string;
        sans: string;
    };
    fontSizes: {
        root: string;
        toolTip: string;
    };
    sizes: {
        rootWidth: string;
        controlWidth: string;
        numberInputMinWidth: string;
        scrubberWidth: string;
        scrubberHeight: string;
        rowHeight: string;
        folderTitleHeight: string;
        checkboxSize: string;
        joystickWidth: string;
        joystickHeight: string;
        colorPickerWidth: string;
        colorPickerHeight: string;
        imagePreviewWidth: string;
        imagePreviewHeight: string;
        monitorHeight: string;
        titleBarHeight: string;
    };
    shadows: {
        level1: string;
        level2: string;
    };
    borderWidths: {
        root: string;
        input: string;
        focus: string;
        hover: string;
        active: string;
        folder: string;
    };
    fontWeights: {
        label: string;
        folder: string;
        button: string;
    };
};
export declare type FullTheme = ReturnType<typeof getDefaultTheme>;
export declare type LevaCustomTheme = Partial<{
    [k in keyof FullTheme]: Partial<FullTheme[k]>;
}>;
export declare const styled: import("@stitches/react").StyledInstance<import("@stitches/react").TMedias & {
    initial: "";
}, {
    colors: {
        elevation1: string;
        elevation2: string;
        elevation3: string;
        accent1: string;
        accent2: string;
        accent3: string;
        highlight1: string;
        highlight2: string;
        highlight3: string;
        vivid1: string;
        folderWidgetColor: string;
        folderTextColor: string;
        toolTipBackground: string;
        toolTipText: string;
    };
    radii: {
        xs: string;
        sm: string;
        lg: string;
    };
    space: {
        xs: string;
        sm: string;
        md: string;
        rowGap: string;
        colGap: string;
    };
    fonts: {
        mono: string;
        sans: string;
    };
    fontSizes: {
        root: string;
        toolTip: string;
    };
    sizes: {
        rootWidth: string;
        controlWidth: string;
        numberInputMinWidth: string;
        scrubberWidth: string;
        scrubberHeight: string;
        rowHeight: string;
        folderTitleHeight: string;
        checkboxSize: string;
        joystickWidth: string;
        joystickHeight: string;
        colorPickerWidth: string;
        colorPickerHeight: string;
        imagePreviewWidth: string;
        imagePreviewHeight: string;
        monitorHeight: string;
        titleBarHeight: string;
    };
    shadows: {
        level1: string;
        level2: string;
    };
    borderWidths: {
        root: string;
        input: string;
        focus: string;
        hover: string;
        active: string;
        folder: string;
    };
    fontWeights: {
        label: string;
        folder: string;
        button: string;
    };
}, {
    $flex: unknown;
    $flexCenter: unknown;
    $reset: unknown;
    $draggable: unknown;
    $focus: string;
    $focusWithin: string;
    $hover: string;
    $active: string;
    $inputStyle: string;
    $focusStyle: string;
    $hoverStyle: string;
    $activeStyle: string;
}, import("@stitches/react").CSSPropertiesToTokenScale>, css: <Vars extends any[]>(...styles: { [k in keyof Vars]: (({
    alignContent?: import("@stitches/react/types/css-types").AlignContentProperty | undefined;
    alignItems?: import("@stitches/react/types/css-types").AlignItemsProperty | undefined;
    alignSelf?: import("@stitches/react/types/css-types").AlignSelfProperty | undefined;
    animationDelay?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    animationDirection?: import("@stitches/react/types/css-types").AnimationDirectionProperty | undefined;
    animationDuration?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    animationFillMode?: import("@stitches/react/types/css-types").AnimationFillModeProperty | undefined;
    animationIterationCount?: import("@stitches/react/types/css-types").AnimationIterationCountProperty | undefined;
    animationName?: import("@stitches/react/types/css-types").AnimationNameProperty | undefined;
    animationPlayState?: import("@stitches/react/types/css-types").AnimationPlayStateProperty | undefined;
    animationTimingFunction?: import("@stitches/react/types/css-types").AnimationTimingFunctionProperty | undefined;
    appearance?: import("@stitches/react/types/css-types").AppearanceProperty | undefined;
    backdropFilter?: import("@stitches/react/types/css-types").BackdropFilterProperty | undefined;
    backfaceVisibility?: import("@stitches/react/types/css-types").BackfaceVisibilityProperty | undefined;
    backgroundAttachment?: import("@stitches/react/types/css-types").BackgroundAttachmentProperty | undefined;
    backgroundBlendMode?: import("@stitches/react/types/css-types").BackgroundBlendModeProperty | undefined;
    backgroundClip?: import("@stitches/react/types/css-types").BackgroundClipProperty | undefined;
    backgroundColor?: "$highlight2" | "$highlight3" | "$elevation2" | import("@stitches/react/types/css-types").BackgroundColorProperty | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | undefined;
    backgroundImage?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BackgroundImageProperty | undefined;
    backgroundOrigin?: import("@stitches/react/types/css-types").BackgroundOriginProperty | undefined;
    backgroundPosition?: import("@stitches/react/types/css-types").BackgroundPositionProperty<0 | (string & {})> | undefined;
    backgroundPositionX?: import("@stitches/react/types/css-types").BackgroundPositionXProperty<0 | (string & {})> | undefined;
    backgroundPositionY?: import("@stitches/react/types/css-types").BackgroundPositionYProperty<0 | (string & {})> | undefined;
    backgroundRepeat?: import("@stitches/react/types/css-types").BackgroundRepeatProperty | undefined;
    backgroundSize?: import("@stitches/react/types/css-types").BackgroundSizeProperty<0 | (string & {})> | undefined;
    blockOverflow?: import("@stitches/react/types/css-types").BlockOverflowProperty | undefined;
    blockSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").BlockSizeProperty<0 | (string & {})> | undefined;
    borderBlockColor?: import("@stitches/react/types/css-types").BorderBlockColorProperty | undefined;
    borderBlockEndColor?: import("@stitches/react/types/css-types").BorderBlockEndColorProperty | undefined;
    borderBlockEndStyle?: import("@stitches/react/types/css-types").BorderBlockEndStyleProperty | undefined;
    borderBlockEndWidth?: import("@stitches/react/types/css-types").BorderBlockEndWidthProperty<0 | (string & {})> | undefined;
    borderBlockStartColor?: import("@stitches/react/types/css-types").BorderBlockStartColorProperty | undefined;
    borderBlockStartStyle?: import("@stitches/react/types/css-types").BorderBlockStartStyleProperty | undefined;
    borderBlockStartWidth?: import("@stitches/react/types/css-types").BorderBlockStartWidthProperty<0 | (string & {})> | undefined;
    borderBlockStyle?: import("@stitches/react/types/css-types").BorderBlockStyleProperty | undefined;
    borderBlockWidth?: import("@stitches/react/types/css-types").BorderBlockWidthProperty<0 | (string & {})> | undefined;
    borderBottomColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderBottomColorProperty | undefined;
    borderBottomLeftRadius?: "$xs" | "$sm" | "$lg" | import("@stitches/react/types/css-types").BorderBottomLeftRadiusProperty<0 | (string & {})> | undefined;
    borderBottomRightRadius?: "$xs" | "$sm" | "$lg" | import("@stitches/react/types/css-types").BorderBottomRightRadiusProperty<0 | (string & {})> | undefined;
    borderBottomStyle?: import("@stitches/react/types/css-types").BorderBottomStyleProperty | undefined;
    borderBottomWidth?: "$root" | "$focus" | "$hover" | "$active" | "$folder" | "$input" | import("@stitches/react/types/css-types").BorderBottomWidthProperty<0 | (string & {})> | undefined;
    borderCollapse?: import("@stitches/react/types/css-types").BorderCollapseProperty | undefined;
    borderEndEndRadius?: import("@stitches/react/types/css-types").BorderEndEndRadiusProperty<0 | (string & {})> | undefined;
    borderEndStartRadius?: import("@stitches/react/types/css-types").BorderEndStartRadiusProperty<0 | (string & {})> | undefined;
    borderImageOutset?: import("@stitches/react/types/css-types").BorderImageOutsetProperty<0 | (string & {})> | undefined;
    borderImageRepeat?: import("@stitches/react/types/css-types").BorderImageRepeatProperty | undefined;
    borderImageSlice?: import("@stitches/react/types/css-types").BorderImageSliceProperty | undefined;
    borderImageSource?: import("@stitches/react/types/css-types").BorderImageSourceProperty | undefined;
    borderImageWidth?: import("@stitches/react/types/css-types").BorderImageWidthProperty<0 | (string & {})> | undefined;
    borderInlineColor?: import("@stitches/react/types/css-types").BorderInlineColorProperty | undefined;
    borderInlineEndColor?: import("@stitches/react/types/css-types").BorderInlineEndColorProperty | undefined;
    borderInlineEndStyle?: import("@stitches/react/types/css-types").BorderInlineEndStyleProperty | undefined;
    borderInlineEndWidth?: import("@stitches/react/types/css-types").BorderInlineEndWidthProperty<0 | (string & {})> | undefined;
    borderInlineStartColor?: import("@stitches/react/types/css-types").BorderInlineStartColorProperty | undefined;
    borderInlineStartStyle?: import("@stitches/react/types/css-types").BorderInlineStartStyleProperty | undefined;
    borderInlineStartWidth?: import("@stitches/react/types/css-types").BorderInlineStartWidthProperty<0 | (string & {})> | undefined;
    borderInlineStyle?: import("@stitches/react/types/css-types").BorderInlineStyleProperty | undefined;
    borderInlineWidth?: import("@stitches/react/types/css-types").BorderInlineWidthProperty<0 | (string & {})> | undefined;
    borderLeftColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderLeftColorProperty | undefined;
    borderLeftStyle?: import("@stitches/react/types/css-types").BorderLeftStyleProperty | undefined;
    borderLeftWidth?: "$root" | "$focus" | "$hover" | "$active" | "$folder" | "$input" | import("@stitches/react/types/css-types").BorderLeftWidthProperty<0 | (string & {})> | undefined;
    borderRightColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderRightColorProperty | undefined;
    borderRightStyle?: import("@stitches/react/types/css-types").BorderRightStyleProperty | undefined;
    borderRightWidth?: "$root" | "$focus" | "$hover" | "$active" | "$folder" | "$input" | import("@stitches/react/types/css-types").BorderRightWidthProperty<0 | (string & {})> | undefined;
    borderSpacing?: import("@stitches/react/types/css-types").BorderSpacingProperty<0 | (string & {})> | undefined;
    borderStartEndRadius?: import("@stitches/react/types/css-types").BorderStartEndRadiusProperty<0 | (string & {})> | undefined;
    borderStartStartRadius?: import("@stitches/react/types/css-types").BorderStartStartRadiusProperty<0 | (string & {})> | undefined;
    borderTopColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderTopColorProperty | undefined;
    borderTopLeftRadius?: "$xs" | "$sm" | "$lg" | import("@stitches/react/types/css-types").BorderTopLeftRadiusProperty<0 | (string & {})> | undefined;
    borderTopRightRadius?: "$xs" | "$sm" | "$lg" | import("@stitches/react/types/css-types").BorderTopRightRadiusProperty<0 | (string & {})> | undefined;
    borderTopStyle?: import("@stitches/react/types/css-types").BorderTopStyleProperty | undefined;
    borderTopWidth?: "$root" | "$focus" | "$hover" | "$active" | "$folder" | "$input" | import("@stitches/react/types/css-types").BorderTopWidthProperty<0 | (string & {})> | undefined;
    bottom?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").BottomProperty<0 | (string & {})> | undefined;
    boxDecorationBreak?: import("@stitches/react/types/css-types").BoxDecorationBreakProperty | undefined;
    boxShadow?: "$level1" | "$level2" | import("@stitches/react/types/css-types").BoxShadowProperty | undefined;
    boxSizing?: import("@stitches/react/types/css-types").BoxSizingProperty | undefined;
    breakAfter?: import("@stitches/react/types/css-types").BreakAfterProperty | undefined;
    breakBefore?: import("@stitches/react/types/css-types").BreakBeforeProperty | undefined;
    breakInside?: import("@stitches/react/types/css-types").BreakInsideProperty | undefined;
    captionSide?: import("@stitches/react/types/css-types").CaptionSideProperty | undefined;
    caretColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").CaretColorProperty | undefined;
    clear?: import("@stitches/react/types/css-types").ClearProperty | undefined;
    clipPath?: import("@stitches/react/types/css-types").ClipPathProperty | undefined;
    color?: "$highlight2" | "$highlight3" | "$elevation2" | import("@stitches/react/types/css-types").ColorProperty | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | undefined;
    colorAdjust?: import("@stitches/react/types/css-types").ColorAdjustProperty | undefined;
    columnCount?: import("@stitches/react/types/css-types").ColumnCountProperty | undefined;
    columnFill?: import("@stitches/react/types/css-types").ColumnFillProperty | undefined;
    columnGap?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ColumnGapProperty<0 | (string & {})> | undefined;
    columnRuleColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").ColumnRuleColorProperty | undefined;
    columnRuleStyle?: import("@stitches/react/types/css-types").ColumnRuleStyleProperty | undefined;
    columnRuleWidth?: import("@stitches/react/types/css-types").ColumnRuleWidthProperty<0 | (string & {})> | undefined;
    columnSpan?: import("@stitches/react/types/css-types").ColumnSpanProperty | undefined;
    columnWidth?: import("@stitches/react/types/css-types").ColumnWidthProperty<0 | (string & {})> | undefined;
    contain?: import("@stitches/react/types/css-types").ContainProperty | undefined;
    content?: import("@stitches/react/types/css-types").ContentProperty | undefined;
    counterIncrement?: import("@stitches/react/types/css-types").CounterIncrementProperty | undefined;
    counterReset?: import("@stitches/react/types/css-types").CounterResetProperty | undefined;
    counterSet?: import("@stitches/react/types/css-types").CounterSetProperty | undefined;
    cursor?: import("@stitches/react/types/css-types").CursorProperty | undefined;
    direction?: import("@stitches/react/types/css-types").DirectionProperty | undefined;
    display?: import("@stitches/react/types/css-types").DisplayProperty | undefined;
    emptyCells?: import("@stitches/react/types/css-types").EmptyCellsProperty | undefined;
    filter?: import("@stitches/react/types/css-types").FilterProperty | undefined;
    flexBasis?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").FlexBasisProperty<0 | (string & {})> | undefined;
    flexDirection?: import("@stitches/react/types/css-types").FlexDirectionProperty | undefined;
    flexGrow?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    flexShrink?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    flexWrap?: import("@stitches/react/types/css-types").FlexWrapProperty | undefined;
    float?: import("@stitches/react/types/css-types").FloatProperty | undefined;
    fontFamily?: import("@stitches/react/types/css-types").FontFamilyProperty | "$mono" | "$sans" | undefined;
    fontFeatureSettings?: import("@stitches/react/types/css-types").FontFeatureSettingsProperty | undefined;
    fontKerning?: import("@stitches/react/types/css-types").FontKerningProperty | undefined;
    fontLanguageOverride?: import("@stitches/react/types/css-types").FontLanguageOverrideProperty | undefined;
    fontOpticalSizing?: import("@stitches/react/types/css-types").FontOpticalSizingProperty | undefined;
    fontSize?: "$root" | import("@stitches/react/types/css-types").FontSizeProperty<0 | (string & {})> | "$toolTip" | undefined;
    fontSizeAdjust?: import("@stitches/react/types/css-types").FontSizeAdjustProperty | undefined;
    fontStretch?: import("@stitches/react/types/css-types").FontStretchProperty | undefined;
    fontStyle?: import("@stitches/react/types/css-types").FontStyleProperty | undefined;
    fontSynthesis?: import("@stitches/react/types/css-types").FontSynthesisProperty | undefined;
    fontVariant?: import("@stitches/react/types/css-types").FontVariantProperty | undefined;
    fontVariantCaps?: import("@stitches/react/types/css-types").FontVariantCapsProperty | undefined;
    fontVariantEastAsian?: import("@stitches/react/types/css-types").FontVariantEastAsianProperty | undefined;
    fontVariantLigatures?: import("@stitches/react/types/css-types").FontVariantLigaturesProperty | undefined;
    fontVariantNumeric?: import("@stitches/react/types/css-types").FontVariantNumericProperty | undefined;
    fontVariantPosition?: import("@stitches/react/types/css-types").FontVariantPositionProperty | undefined;
    fontVariationSettings?: import("@stitches/react/types/css-types").FontVariationSettingsProperty | undefined;
    fontWeight?: import("@stitches/react/types/css-types").FontWeightProperty | "$button" | "$label" | "$folder" | undefined;
    gridAutoColumns?: import("@stitches/react/types/css-types").GridAutoColumnsProperty<0 | (string & {})> | undefined;
    gridAutoFlow?: import("@stitches/react/types/css-types").GridAutoFlowProperty | undefined;
    gridAutoRows?: import("@stitches/react/types/css-types").GridAutoRowsProperty<0 | (string & {})> | undefined;
    gridColumnEnd?: import("@stitches/react/types/css-types").GridColumnEndProperty | undefined;
    gridColumnStart?: import("@stitches/react/types/css-types").GridColumnStartProperty | undefined;
    gridRowEnd?: import("@stitches/react/types/css-types").GridRowEndProperty | undefined;
    gridRowStart?: import("@stitches/react/types/css-types").GridRowStartProperty | undefined;
    gridTemplateAreas?: import("@stitches/react/types/css-types").GridTemplateAreasProperty | undefined;
    gridTemplateColumns?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").GridTemplateColumnsProperty<0 | (string & {})> | undefined;
    gridTemplateRows?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").GridTemplateRowsProperty<0 | (string & {})> | undefined;
    hangingPunctuation?: import("@stitches/react/types/css-types").HangingPunctuationProperty | undefined;
    height?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").HeightProperty<0 | (string & {})> | undefined;
    hyphens?: import("@stitches/react/types/css-types").HyphensProperty | undefined;
    imageOrientation?: import("@stitches/react/types/css-types").ImageOrientationProperty | undefined;
    imageRendering?: import("@stitches/react/types/css-types").ImageRenderingProperty | undefined;
    imageResolution?: import("@stitches/react/types/css-types").ImageResolutionProperty | undefined;
    initialLetter?: import("@stitches/react/types/css-types").InitialLetterProperty | undefined;
    inlineSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").InlineSizeProperty<0 | (string & {})> | undefined;
    inset?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetProperty<0 | (string & {})> | undefined;
    insetBlock?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetBlockProperty<0 | (string & {})> | undefined;
    insetBlockEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetBlockEndProperty<0 | (string & {})> | undefined;
    insetBlockStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetBlockStartProperty<0 | (string & {})> | undefined;
    insetInline?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetInlineProperty<0 | (string & {})> | undefined;
    insetInlineEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetInlineEndProperty<0 | (string & {})> | undefined;
    insetInlineStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").InsetInlineStartProperty<0 | (string & {})> | undefined;
    isolation?: import("@stitches/react/types/css-types").IsolationProperty | undefined;
    justifyContent?: import("@stitches/react/types/css-types").JustifyContentProperty | undefined;
    justifyItems?: import("@stitches/react/types/css-types").JustifyItemsProperty | undefined;
    justifySelf?: import("@stitches/react/types/css-types").JustifySelfProperty | undefined;
    left?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").LeftProperty<0 | (string & {})> | undefined;
    letterSpacing?: import("@stitches/react/types/css-types").LetterSpacingProperty<0 | (string & {})> | undefined;
    lineBreak?: import("@stitches/react/types/css-types").LineBreakProperty | undefined;
    lineHeight?: import("@stitches/react/types/css-types").LineHeightProperty<0 | (string & {})> | undefined;
    lineHeightStep?: import("@stitches/react/types/css-types").LineHeightStepProperty<0 | (string & {})> | undefined;
    listStyleImage?: import("@stitches/react/types/css-types").ListStyleImageProperty | undefined;
    listStylePosition?: import("@stitches/react/types/css-types").ListStylePositionProperty | undefined;
    listStyleType?: import("@stitches/react/types/css-types").ListStyleTypeProperty | undefined;
    marginBlock?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginBlockProperty<0 | (string & {})> | undefined;
    marginBlockEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginBlockEndProperty<0 | (string & {})> | undefined;
    marginBlockStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginBlockStartProperty<0 | (string & {})> | undefined;
    marginBottom?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginBottomProperty<0 | (string & {})> | undefined;
    marginInline?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginInlineProperty<0 | (string & {})> | undefined;
    marginInlineEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginInlineEndProperty<0 | (string & {})> | undefined;
    marginInlineStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginInlineStartProperty<0 | (string & {})> | undefined;
    marginLeft?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginLeftProperty<0 | (string & {})> | undefined;
    marginRight?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginRightProperty<0 | (string & {})> | undefined;
    marginTop?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginTopProperty<0 | (string & {})> | undefined;
    maskBorderMode?: import("@stitches/react/types/css-types").MaskBorderModeProperty | undefined;
    maskBorderOutset?: import("@stitches/react/types/css-types").MaskBorderOutsetProperty<0 | (string & {})> | undefined;
    maskBorderRepeat?: import("@stitches/react/types/css-types").MaskBorderRepeatProperty | undefined;
    maskBorderSlice?: import("@stitches/react/types/css-types").MaskBorderSliceProperty | undefined;
    maskBorderSource?: import("@stitches/react/types/css-types").MaskBorderSourceProperty | undefined;
    maskBorderWidth?: import("@stitches/react/types/css-types").MaskBorderWidthProperty<0 | (string & {})> | undefined;
    maskClip?: import("@stitches/react/types/css-types").MaskClipProperty | undefined;
    maskComposite?: import("@stitches/react/types/css-types").MaskCompositeProperty | undefined;
    maskImage?: import("@stitches/react/types/css-types").MaskImageProperty | undefined;
    maskMode?: import("@stitches/react/types/css-types").MaskModeProperty | undefined;
    maskOrigin?: import("@stitches/react/types/css-types").MaskOriginProperty | undefined;
    maskPosition?: import("@stitches/react/types/css-types").MaskPositionProperty<0 | (string & {})> | undefined;
    maskRepeat?: import("@stitches/react/types/css-types").MaskRepeatProperty | undefined;
    maskSize?: import("@stitches/react/types/css-types").MaskSizeProperty<0 | (string & {})> | undefined;
    maskType?: import("@stitches/react/types/css-types").MaskTypeProperty | undefined;
    maxBlockSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MaxBlockSizeProperty<0 | (string & {})> | undefined;
    maxHeight?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MaxHeightProperty<0 | (string & {})> | undefined;
    maxInlineSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MaxInlineSizeProperty<0 | (string & {})> | undefined;
    maxLines?: import("@stitches/react/types/css-types").MaxLinesProperty | undefined;
    maxWidth?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MaxWidthProperty<0 | (string & {})> | undefined;
    minBlockSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MinBlockSizeProperty<0 | (string & {})> | undefined;
    minHeight?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MinHeightProperty<0 | (string & {})> | undefined;
    minInlineSize?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MinInlineSizeProperty<0 | (string & {})> | undefined;
    minWidth?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").MinWidthProperty<0 | (string & {})> | undefined;
    mixBlendMode?: import("@stitches/react/types/css-types").MixBlendModeProperty | undefined;
    motionDistance?: import("@stitches/react/types/css-types").OffsetDistanceProperty<0 | (string & {})> | undefined;
    motionPath?: import("@stitches/react/types/css-types").OffsetPathProperty | undefined;
    motionRotation?: import("@stitches/react/types/css-types").OffsetRotateProperty | undefined;
    objectFit?: import("@stitches/react/types/css-types").ObjectFitProperty | undefined;
    objectPosition?: import("@stitches/react/types/css-types").ObjectPositionProperty<0 | (string & {})> | undefined;
    offsetAnchor?: import("@stitches/react/types/css-types").OffsetAnchorProperty<0 | (string & {})> | undefined;
    offsetDistance?: import("@stitches/react/types/css-types").OffsetDistanceProperty<0 | (string & {})> | undefined;
    offsetPath?: import("@stitches/react/types/css-types").OffsetPathProperty | undefined;
    offsetPosition?: import("@stitches/react/types/css-types").OffsetPositionProperty<0 | (string & {})> | undefined;
    offsetRotate?: import("@stitches/react/types/css-types").OffsetRotateProperty | undefined;
    offsetRotation?: import("@stitches/react/types/css-types").OffsetRotateProperty | undefined;
    opacity?: import("@stitches/react/types/css-types").OpacityProperty | undefined;
    order?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    orphans?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    outlineColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").OutlineColorProperty | undefined;
    outlineOffset?: import("@stitches/react/types/css-types").OutlineOffsetProperty<0 | (string & {})> | undefined;
    outlineStyle?: import("@stitches/react/types/css-types").OutlineStyleProperty | undefined;
    outlineWidth?: import("@stitches/react/types/css-types").OutlineWidthProperty<0 | (string & {})> | undefined;
    overflow?: import("@stitches/react/types/css-types").OverflowProperty | undefined;
    overflowAnchor?: import("@stitches/react/types/css-types").OverflowAnchorProperty | undefined;
    overflowBlock?: import("@stitches/react/types/css-types").OverflowBlockProperty | undefined;
    overflowClipBox?: import("@stitches/react/types/css-types").OverflowClipBoxProperty | undefined;
    overflowInline?: import("@stitches/react/types/css-types").OverflowInlineProperty | undefined;
    overflowWrap?: import("@stitches/react/types/css-types").OverflowWrapProperty | undefined;
    overflowX?: import("@stitches/react/types/css-types").OverflowXProperty | undefined;
    overflowY?: import("@stitches/react/types/css-types").OverflowYProperty | undefined;
    overscrollBehavior?: import("@stitches/react/types/css-types").OverscrollBehaviorProperty | undefined;
    overscrollBehaviorX?: import("@stitches/react/types/css-types").OverscrollBehaviorXProperty | undefined;
    overscrollBehaviorY?: import("@stitches/react/types/css-types").OverscrollBehaviorYProperty | undefined;
    paddingBlock?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingBlockProperty<0 | (string & {})> | undefined;
    paddingBlockEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingBlockEndProperty<0 | (string & {})> | undefined;
    paddingBlockStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingBlockStartProperty<0 | (string & {})> | undefined;
    paddingBottom?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingBottomProperty<0 | (string & {})> | undefined;
    paddingInline?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingInlineProperty<0 | (string & {})> | undefined;
    paddingInlineEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingInlineEndProperty<0 | (string & {})> | undefined;
    paddingInlineStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingInlineStartProperty<0 | (string & {})> | undefined;
    paddingLeft?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingLeftProperty<0 | (string & {})> | undefined;
    paddingRight?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingRightProperty<0 | (string & {})> | undefined;
    paddingTop?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingTopProperty<0 | (string & {})> | undefined;
    pageBreakAfter?: import("@stitches/react/types/css-types").PageBreakAfterProperty | undefined;
    pageBreakBefore?: import("@stitches/react/types/css-types").PageBreakBeforeProperty | undefined;
    pageBreakInside?: import("@stitches/react/types/css-types").PageBreakInsideProperty | undefined;
    paintOrder?: import("@stitches/react/types/css-types").PaintOrderProperty | undefined;
    perspective?: import("@stitches/react/types/css-types").PerspectiveProperty<0 | (string & {})> | undefined;
    perspectiveOrigin?: import("@stitches/react/types/css-types").PerspectiveOriginProperty<0 | (string & {})> | undefined;
    placeContent?: import("@stitches/react/types/css-types").PlaceContentProperty | undefined;
    pointerEvents?: import("@stitches/react/types/css-types").PointerEventsProperty | undefined;
    position?: import("@stitches/react/types/css-types").PositionProperty | undefined;
    quotes?: import("@stitches/react/types/css-types").QuotesProperty | undefined;
    resize?: import("@stitches/react/types/css-types").ResizeProperty | undefined;
    right?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").RightProperty<0 | (string & {})> | undefined;
    rotate?: import("@stitches/react/types/css-types").RotateProperty | undefined;
    rowGap?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").RowGapProperty<0 | (string & {})> | undefined;
    rubyAlign?: import("@stitches/react/types/css-types").RubyAlignProperty | undefined;
    rubyMerge?: import("@stitches/react/types/css-types").RubyMergeProperty | undefined;
    rubyPosition?: import("@stitches/react/types/css-types").RubyPositionProperty | undefined;
    scale?: import("@stitches/react/types/css-types").ScaleProperty | undefined;
    scrollBehavior?: import("@stitches/react/types/css-types").ScrollBehaviorProperty | undefined;
    scrollMargin?: import("@stitches/react/types/css-types").ScrollMarginProperty<0 | (string & {})> | undefined;
    scrollMarginBlock?: import("@stitches/react/types/css-types").ScrollMarginBlockProperty<0 | (string & {})> | undefined;
    scrollMarginBlockEnd?: import("@stitches/react/types/css-types").ScrollMarginBlockEndProperty<0 | (string & {})> | undefined;
    scrollMarginBlockStart?: import("@stitches/react/types/css-types").ScrollMarginBlockStartProperty<0 | (string & {})> | undefined;
    scrollMarginBottom?: import("@stitches/react/types/css-types").ScrollMarginBottomProperty<0 | (string & {})> | undefined;
    scrollMarginInline?: import("@stitches/react/types/css-types").ScrollMarginInlineProperty<0 | (string & {})> | undefined;
    scrollMarginInlineEnd?: import("@stitches/react/types/css-types").ScrollMarginInlineEndProperty<0 | (string & {})> | undefined;
    scrollMarginInlineStart?: import("@stitches/react/types/css-types").ScrollMarginInlineStartProperty<0 | (string & {})> | undefined;
    scrollMarginLeft?: import("@stitches/react/types/css-types").ScrollMarginLeftProperty<0 | (string & {})> | undefined;
    scrollMarginRight?: import("@stitches/react/types/css-types").ScrollMarginRightProperty<0 | (string & {})> | undefined;
    scrollMarginTop?: import("@stitches/react/types/css-types").ScrollMarginTopProperty<0 | (string & {})> | undefined;
    scrollPadding?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingProperty<0 | (string & {})> | undefined;
    scrollPaddingBlock?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingBlockProperty<0 | (string & {})> | undefined;
    scrollPaddingBlockEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingBlockEndProperty<0 | (string & {})> | undefined;
    scrollPaddingBlockStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingBlockStartProperty<0 | (string & {})> | undefined;
    scrollPaddingBottom?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingBottomProperty<0 | (string & {})> | undefined;
    scrollPaddingInline?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingInlineProperty<0 | (string & {})> | undefined;
    scrollPaddingInlineEnd?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingInlineEndProperty<0 | (string & {})> | undefined;
    scrollPaddingInlineStart?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingInlineStartProperty<0 | (string & {})> | undefined;
    scrollPaddingLeft?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingLeftProperty<0 | (string & {})> | undefined;
    scrollPaddingRight?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingRightProperty<0 | (string & {})> | undefined;
    scrollPaddingTop?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ScrollPaddingTopProperty<0 | (string & {})> | undefined;
    scrollSnapAlign?: import("@stitches/react/types/css-types").ScrollSnapAlignProperty | undefined;
    scrollSnapStop?: import("@stitches/react/types/css-types").ScrollSnapStopProperty | undefined;
    scrollSnapType?: import("@stitches/react/types/css-types").ScrollSnapTypeProperty | undefined;
    scrollbarColor?: import("@stitches/react/types/css-types").ScrollbarColorProperty | undefined;
    scrollbarWidth?: import("@stitches/react/types/css-types").ScrollbarWidthProperty | undefined;
    shapeImageThreshold?: import("@stitches/react/types/css-types").ShapeImageThresholdProperty | undefined;
    shapeMargin?: import("@stitches/react/types/css-types").ShapeMarginProperty<0 | (string & {})> | undefined;
    shapeOutside?: import("@stitches/react/types/css-types").ShapeOutsideProperty | undefined;
    tabSize?: import("@stitches/react/types/css-types").TabSizeProperty<0 | (string & {})> | undefined;
    tableLayout?: import("@stitches/react/types/css-types").TableLayoutProperty | undefined;
    textAlign?: import("@stitches/react/types/css-types").TextAlignProperty | undefined;
    textAlignLast?: import("@stitches/react/types/css-types").TextAlignLastProperty | undefined;
    textCombineUpright?: import("@stitches/react/types/css-types").TextCombineUprightProperty | undefined;
    textDecorationColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").TextDecorationColorProperty | undefined;
    textDecorationLine?: import("@stitches/react/types/css-types").TextDecorationLineProperty | undefined;
    textDecorationSkip?: import("@stitches/react/types/css-types").TextDecorationSkipProperty | undefined;
    textDecorationSkipInk?: import("@stitches/react/types/css-types").TextDecorationSkipInkProperty | undefined;
    textDecorationStyle?: import("@stitches/react/types/css-types").TextDecorationStyleProperty | undefined;
    textDecorationThickness?: import("@stitches/react/types/css-types").TextDecorationThicknessProperty<0 | (string & {})> | undefined;
    textDecorationWidth?: import("@stitches/react/types/css-types").TextDecorationThicknessProperty<0 | (string & {})> | undefined;
    textEmphasisColor?: import("@stitches/react/types/css-types").TextEmphasisColorProperty | undefined;
    textEmphasisPosition?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    textEmphasisStyle?: import("@stitches/react/types/css-types").TextEmphasisStyleProperty | undefined;
    textIndent?: import("@stitches/react/types/css-types").TextIndentProperty<0 | (string & {})> | undefined;
    textJustify?: import("@stitches/react/types/css-types").TextJustifyProperty | undefined;
    textOrientation?: import("@stitches/react/types/css-types").TextOrientationProperty | undefined;
    textOverflow?: import("@stitches/react/types/css-types").TextOverflowProperty | undefined;
    textRendering?: import("@stitches/react/types/css-types").TextRenderingProperty | undefined;
    textShadow?: "$level1" | "$level2" | import("@stitches/react/types/css-types").TextShadowProperty | undefined;
    textSizeAdjust?: import("@stitches/react/types/css-types").TextSizeAdjustProperty | undefined;
    textTransform?: import("@stitches/react/types/css-types").TextTransformProperty | undefined;
    textUnderlineOffset?: import("@stitches/react/types/css-types").TextUnderlineOffsetProperty<0 | (string & {})> | undefined;
    textUnderlinePosition?: import("@stitches/react/types/css-types").TextUnderlinePositionProperty | undefined;
    top?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").TopProperty<0 | (string & {})> | undefined;
    touchAction?: import("@stitches/react/types/css-types").TouchActionProperty | undefined;
    transform?: import("@stitches/react/types/css-types").TransformProperty | undefined;
    transformBox?: import("@stitches/react/types/css-types").TransformBoxProperty | undefined;
    transformOrigin?: import("@stitches/react/types/css-types").TransformOriginProperty<0 | (string & {})> | undefined;
    transformStyle?: import("@stitches/react/types/css-types").TransformStyleProperty | undefined;
    transitionDelay?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    transitionDuration?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    transitionProperty?: import("@stitches/react/types/css-types").TransitionPropertyProperty | undefined;
    transitionTimingFunction?: import("@stitches/react/types/css-types").TransitionTimingFunctionProperty | undefined;
    translate?: import("@stitches/react/types/css-types").TranslateProperty<0 | (string & {})> | undefined;
    unicodeBidi?: import("@stitches/react/types/css-types").UnicodeBidiProperty | undefined;
    userSelect?: import("@stitches/react/types/css-types").UserSelectProperty | undefined;
    verticalAlign?: import("@stitches/react/types/css-types").VerticalAlignProperty<0 | (string & {})> | undefined;
    visibility?: import("@stitches/react/types/css-types").VisibilityProperty | undefined;
    whiteSpace?: import("@stitches/react/types/css-types").WhiteSpaceProperty | undefined;
    widows?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    width?: "$controlWidth" | "$rootWidth" | "$numberInputMinWidth" | "$scrubberWidth" | "$scrubberHeight" | "$rowHeight" | "$folderTitleHeight" | "$checkboxSize" | "$joystickWidth" | "$joystickHeight" | "$colorPickerWidth" | "$colorPickerHeight" | "$imagePreviewWidth" | "$imagePreviewHeight" | "$monitorHeight" | "$titleBarHeight" | import("@stitches/react/types/css-types").WidthProperty<0 | (string & {})> | undefined;
    willChange?: import("@stitches/react/types/css-types").WillChangeProperty | undefined;
    wordBreak?: import("@stitches/react/types/css-types").WordBreakProperty | undefined;
    wordSpacing?: import("@stitches/react/types/css-types").WordSpacingProperty<0 | (string & {})> | undefined;
    wordWrap?: import("@stitches/react/types/css-types").WordWrapProperty | undefined;
    writingMode?: import("@stitches/react/types/css-types").WritingModeProperty | undefined;
    zIndex?: import("@stitches/react/types/css-types").ZIndexProperty | undefined;
    zoom?: import("@stitches/react/types/css-types").ZoomProperty | undefined;
    all?: import("@stitches/react/types/css-types").Globals | undefined;
    animation?: import("@stitches/react/types/css-types").AnimationProperty | undefined;
    background?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BackgroundProperty<0 | (string & {})> | undefined;
    border?: "$highlight2" | "$highlight3" | "$elevation2" | import("@stitches/react/types/css-types").BorderProperty<0 | (string & {})> | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | undefined;
    borderBlock?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderBlockProperty<0 | (string & {})> | undefined;
    borderBlockEnd?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderBlockEndProperty<0 | (string & {})> | undefined;
    borderBlockStart?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderBlockStartProperty<0 | (string & {})> | undefined;
    borderBottom?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderBottomProperty<0 | (string & {})> | undefined;
    borderColor?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderColorProperty | undefined;
    borderImage?: import("@stitches/react/types/css-types").BorderImageProperty | undefined;
    borderInline?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderInlineProperty<0 | (string & {})> | undefined;
    borderInlineEnd?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderInlineEndProperty<0 | (string & {})> | undefined;
    borderInlineStart?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderInlineStartProperty<0 | (string & {})> | undefined;
    borderLeft?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderLeftProperty<0 | (string & {})> | undefined;
    borderRadius?: "$xs" | "$sm" | "$lg" | import("@stitches/react/types/css-types").BorderRadiusProperty<0 | (string & {})> | undefined;
    borderRight?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderRightProperty<0 | (string & {})> | undefined;
    borderStyle?: import("@stitches/react/types/css-types").BorderStyleProperty | undefined;
    borderTop?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").BorderTopProperty<0 | (string & {})> | undefined;
    borderWidth?: "$root" | "$focus" | "$hover" | "$active" | "$folder" | "$input" | import("@stitches/react/types/css-types").BorderWidthProperty<0 | (string & {})> | undefined;
    columnRule?: import("@stitches/react/types/css-types").ColumnRuleProperty<0 | (string & {})> | undefined;
    columns?: import("@stitches/react/types/css-types").ColumnsProperty<0 | (string & {})> | undefined;
    flex?: import("@stitches/react/types/css-types").FlexProperty<0 | (string & {})> | undefined;
    flexFlow?: import("@stitches/react/types/css-types").FlexFlowProperty | undefined;
    font?: import("@stitches/react/types/css-types").FontProperty | undefined;
    gap?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").GapProperty<0 | (string & {})> | undefined;
    grid?: import("@stitches/react/types/css-types").GridProperty | undefined;
    gridArea?: import("@stitches/react/types/css-types").GridAreaProperty | undefined;
    gridColumn?: import("@stitches/react/types/css-types").GridColumnProperty | undefined;
    gridColumnGap?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").ColumnGapProperty<0 | (string & {})> | undefined;
    gridRow?: import("@stitches/react/types/css-types").GridRowProperty | undefined;
    gridRowGap?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").RowGapProperty<0 | (string & {})> | undefined;
    gridTemplate?: import("@stitches/react/types/css-types").GridTemplateProperty | undefined;
    lineClamp?: import("@stitches/react/types/css-types").LineClampProperty | undefined;
    listStyle?: import("@stitches/react/types/css-types").ListStyleProperty | undefined;
    margin?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").MarginProperty<0 | (string & {})> | undefined;
    mask?: import("@stitches/react/types/css-types").MaskProperty<0 | (string & {})> | undefined;
    maskBorder?: import("@stitches/react/types/css-types").MaskBorderProperty | undefined;
    motion?: import("@stitches/react/types/css-types").OffsetProperty<0 | (string & {})> | undefined;
    offset?: import("@stitches/react/types/css-types").OffsetProperty<0 | (string & {})> | undefined;
    outline?: "$highlight2" | "$highlight3" | "$elevation2" | import("@stitches/react/types/css-types").OutlineProperty<0 | (string & {})> | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | undefined;
    padding?: "$rowGap" | "$xs" | "$sm" | "$md" | "$colGap" | import("@stitches/react/types/css-types").PaddingProperty<0 | (string & {})> | undefined;
    placeItems?: import("@stitches/react/types/css-types").PlaceItemsProperty | undefined;
    placeSelf?: import("@stitches/react/types/css-types").PlaceSelfProperty | undefined;
    textDecoration?: import("@stitches/react/types/css-types").TextDecorationProperty<0 | (string & {})> | undefined;
    textEmphasis?: import("@stitches/react/types/css-types").TextEmphasisProperty | undefined;
    transition?: import("@stitches/react/types/css-types").TransitionProperty | undefined;
    MozFloatEdge?: import("@stitches/react/types/css-types").MozFloatEdgeProperty | undefined;
    MozFontLanguageOverride?: import("@stitches/react/types/css-types").FontLanguageOverrideProperty | undefined;
    MozOrient?: import("@stitches/react/types/css-types").MozOrientProperty | undefined;
    MozOutlineRadiusBottomleft?: import("@stitches/react/types/css-types").MozOutlineRadiusBottomleftProperty<0 | (string & {})> | undefined;
    MozOutlineRadiusBottomright?: import("@stitches/react/types/css-types").MozOutlineRadiusBottomrightProperty<0 | (string & {})> | undefined;
    MozOutlineRadiusTopleft?: import("@stitches/react/types/css-types").MozOutlineRadiusTopleftProperty<0 | (string & {})> | undefined;
    MozOutlineRadiusTopright?: import("@stitches/react/types/css-types").MozOutlineRadiusToprightProperty<0 | (string & {})> | undefined;
    MozTabSize?: import("@stitches/react/types/css-types").TabSizeProperty<0 | (string & {})> | undefined;
    MozUserFocus?: import("@stitches/react/types/css-types").MozUserFocusProperty | undefined;
    MozUserModify?: import("@stitches/react/types/css-types").MozUserModifyProperty | undefined;
    WebkitAppearance?: import("@stitches/react/types/css-types").WebkitAppearanceProperty | undefined;
    WebkitBackdropFilter?: import("@stitches/react/types/css-types").BackdropFilterProperty | undefined;
    WebkitBackfaceVisibility?: import("@stitches/react/types/css-types").BackfaceVisibilityProperty | undefined;
    WebkitBackgroundClip?: import("@stitches/react/types/css-types").BackgroundClipProperty | undefined;
    WebkitBoxDecorationBreak?: import("@stitches/react/types/css-types").BoxDecorationBreakProperty | undefined;
    WebkitBoxReflect?: import("@stitches/react/types/css-types").WebkitBoxReflectProperty<0 | (string & {})> | undefined;
    WebkitClipPath?: import("@stitches/react/types/css-types").ClipPathProperty | undefined;
    WebkitColorAdjust?: import("@stitches/react/types/css-types").ColorAdjustProperty | undefined;
    WebkitFontKerning?: import("@stitches/react/types/css-types").FontKerningProperty | undefined;
    WebkitHyphens?: import("@stitches/react/types/css-types").HyphensProperty | undefined;
    WebkitLineClamp?: import("@stitches/react/types/css-types").WebkitLineClampProperty | undefined;
    WebkitMaskAttachment?: import("@stitches/react/types/css-types").WebkitMaskAttachmentProperty | undefined;
    WebkitMaskClip?: import("@stitches/react/types/css-types").WebkitMaskClipProperty | undefined;
    WebkitMaskComposite?: import("@stitches/react/types/css-types").WebkitMaskCompositeProperty | undefined;
    WebkitMaskImage?: import("@stitches/react/types/css-types").WebkitMaskImageProperty | undefined;
    WebkitMaskOrigin?: import("@stitches/react/types/css-types").WebkitMaskOriginProperty | undefined;
    WebkitMaskPosition?: import("@stitches/react/types/css-types").WebkitMaskPositionProperty<0 | (string & {})> | undefined;
    WebkitMaskPositionX?: import("@stitches/react/types/css-types").WebkitMaskPositionXProperty<0 | (string & {})> | undefined;
    WebkitMaskPositionY?: import("@stitches/react/types/css-types").WebkitMaskPositionYProperty<0 | (string & {})> | undefined;
    WebkitMaskRepeat?: import("@stitches/react/types/css-types").WebkitMaskRepeatProperty | undefined;
    WebkitMaskRepeatX?: import("@stitches/react/types/css-types").WebkitMaskRepeatXProperty | undefined;
    WebkitMaskRepeatY?: import("@stitches/react/types/css-types").WebkitMaskRepeatYProperty | undefined;
    WebkitMaskSize?: import("@stitches/react/types/css-types").WebkitMaskSizeProperty<0 | (string & {})> | undefined;
    WebkitOverflowScrolling?: import("@stitches/react/types/css-types").WebkitOverflowScrollingProperty | undefined;
    WebkitTapHighlightColor?: import("@stitches/react/types/css-types").WebkitTapHighlightColorProperty | undefined;
    WebkitTextCombine?: import("@stitches/react/types/css-types").TextCombineUprightProperty | undefined;
    WebkitTextDecorationColor?: import("@stitches/react/types/css-types").TextDecorationColorProperty | undefined;
    WebkitTextDecorationLine?: import("@stitches/react/types/css-types").TextDecorationLineProperty | undefined;
    WebkitTextDecorationSkip?: import("@stitches/react/types/css-types").TextDecorationSkipProperty | undefined;
    WebkitTextDecorationStyle?: import("@stitches/react/types/css-types").TextDecorationStyleProperty | undefined;
    WebkitTextEmphasisColor?: import("@stitches/react/types/css-types").TextEmphasisColorProperty | undefined;
    WebkitTextEmphasisPosition?: import("@stitches/react/types/css-types").GlobalsString | undefined;
    WebkitTextEmphasisStyle?: import("@stitches/react/types/css-types").TextEmphasisStyleProperty | undefined;
    WebkitTextFillColor?: import("@stitches/react/types/css-types").WebkitTextFillColorProperty | undefined;
    WebkitTextOrientation?: import("@stitches/react/types/css-types").TextOrientationProperty | undefined;
    WebkitTextSizeAdjust?: import("@stitches/react/types/css-types").TextSizeAdjustProperty | undefined;
    WebkitTextStrokeColor?: import("@stitches/react/types/css-types").WebkitTextStrokeColorProperty | undefined;
    WebkitTextStrokeWidth?: import("@stitches/react/types/css-types").WebkitTextStrokeWidthProperty<0 | (string & {})> | undefined;
    WebkitTouchCallout?: import("@stitches/react/types/css-types").WebkitTouchCalloutProperty | undefined;
    WebkitUserModify?: import("@stitches/react/types/css-types").WebkitUserModifyProperty | undefined;
    WebkitUserSelect?: import("@stitches/react/types/css-types").UserSelectProperty | undefined;
    WebkitMask?: import("@stitches/react/types/css-types").WebkitMaskProperty<0 | (string & {})> | undefined;
    WebkitTextEmphasis?: import("@stitches/react/types/css-types").TextEmphasisProperty | undefined;
    WebkitTextStroke?: import("@stitches/react/types/css-types").WebkitTextStrokeProperty<0 | (string & {})> | undefined;
    alignmentBaseline?: import("@stitches/react/types/css-types").AlignmentBaselineProperty | undefined;
    baselineShift?: import("@stitches/react/types/css-types").BaselineShiftProperty<0 | (string & {})> | undefined;
    clip?: import("@stitches/react/types/css-types").ClipProperty | undefined;
    clipRule?: import("@stitches/react/types/css-types").ClipRuleProperty | undefined;
    colorInterpolation?: import("@stitches/react/types/css-types").ColorInterpolationProperty | undefined;
    colorRendering?: import("@stitches/react/types/css-types").ColorRenderingProperty | undefined;
    dominantBaseline?: import("@stitches/react/types/css-types").DominantBaselineProperty | undefined;
    fill?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").FillProperty | undefined;
    fillOpacity?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    fillRule?: import("@stitches/react/types/css-types").FillRuleProperty | undefined;
    floodColor?: import("@stitches/react/types/css-types").FloodColorProperty | undefined;
    floodOpacity?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    glyphOrientationVertical?: import("@stitches/react/types/css-types").GlyphOrientationVerticalProperty | undefined;
    lightingColor?: import("@stitches/react/types/css-types").LightingColorProperty | undefined;
    marker?: import("@stitches/react/types/css-types").MarkerProperty | undefined;
    markerEnd?: import("@stitches/react/types/css-types").MarkerEndProperty | undefined;
    markerMid?: import("@stitches/react/types/css-types").MarkerMidProperty | undefined;
    markerStart?: import("@stitches/react/types/css-types").MarkerStartProperty | undefined;
    shapeRendering?: import("@stitches/react/types/css-types").ShapeRenderingProperty | undefined;
    stopColor?: import("@stitches/react/types/css-types").StopColorProperty | undefined;
    stopOpacity?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    stroke?: "$highlight2" | "$highlight3" | "$elevation2" | "$accent2" | "$accent1" | "$elevation1" | "$elevation3" | "$accent3" | "$highlight1" | "$vivid1" | "$folderWidgetColor" | "$folderTextColor" | "$toolTipBackground" | "$toolTipText" | import("@stitches/react/types/css-types").StrokeProperty | undefined;
    strokeDasharray?: import("@stitches/react/types/css-types").StrokeDasharrayProperty<0 | (string & {})> | undefined;
    strokeDashoffset?: import("@stitches/react/types/css-types").StrokeDashoffsetProperty<0 | (string & {})> | undefined;
    strokeLinecap?: import("@stitches/react/types/css-types").StrokeLinecapProperty | undefined;
    strokeLinejoin?: import("@stitches/react/types/css-types").StrokeLinejoinProperty | undefined;
    strokeMiterlimit?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    strokeOpacity?: import("@stitches/react/types/css-types").GlobalsNumber | undefined;
    strokeWidth?: import("@stitches/react/types/css-types").StrokeWidthProperty<0 | (string & {})> | undefined;
    textAnchor?: import("@stitches/react/types/css-types").TextAnchorProperty | undefined;
    vectorEffect?: import("@stitches/react/types/css-types").VectorEffectProperty | undefined;
} & {} & {
    $flex?: unknown;
    $flexCenter?: unknown;
    $reset?: unknown;
    $draggable?: unknown;
    $focus?: string | undefined;
    $focusWithin?: string | undefined;
    $hover?: string | undefined;
    $active?: string | undefined;
    $inputStyle?: string | undefined;
    $focusStyle?: string | undefined;
    $hoverStyle?: string | undefined;
    $activeStyle?: string | undefined;
} & {
    variants?: (Vars[k] & { [a in keyof Vars[k]]: { [b in keyof Vars[k][a]]: import("@stitches/react").InternalCSS<import("@stitches/react").TMedias, {
        colors: {
            elevation1: string;
            elevation2: string;
            elevation3: string;
            accent1: string;
            accent2: string;
            accent3: string;
            highlight1: string;
            highlight2: string;
            highlight3: string;
            vivid1: string;
            folderWidgetColor: string;
            folderTextColor: string;
            toolTipBackground: string;
            toolTipText: string;
        };
        radii: {
            xs: string;
            sm: string;
            lg: string;
        };
        space: {
            xs: string;
            sm: string;
            md: string;
            rowGap: string;
            colGap: string;
        };
        fonts: {
            mono: string;
            sans: string;
        };
        fontSizes: {
            root: string;
            toolTip: string;
        };
        sizes: {
            rootWidth: string;
            controlWidth: string;
            numberInputMinWidth: string;
            scrubberWidth: string;
            scrubberHeight: string;
            rowHeight: string;
            folderTitleHeight: string;
            checkboxSize: string;
            joystickWidth: string;
            joystickHeight: string;
            colorPickerWidth: string;
            colorPickerHeight: string;
            imagePreviewWidth: string;
            imagePreviewHeight: string;
            monitorHeight: string;
            titleBarHeight: string;
        };
        shadows: {
            level1: string;
            level2: string;
        };
        borderWidths: {
            root: string;
            input: string;
            focus: string;
            hover: string;
            active: string;
            folder: string;
        };
        fontWeights: {
            label: string;
            folder: string;
            button: string;
        };
    }, {
        $flex: unknown;
        $flexCenter: unknown;
        $reset: unknown;
        $draggable: unknown;
        $focus: string;
        $focusWithin: string;
        $hover: string;
        $active: string;
        $inputStyle: string;
        $focusStyle: string;
        $hoverStyle: string;
        $activeStyle: string;
    }, import("@stitches/react").CSSPropertiesToTokenScale>; }; }) | undefined;
}) | Record<string, string | number | import("@stitches/react").InternalCSS<import("@stitches/react").TMedias, {
    colors: {
        elevation1: string;
        elevation2: string;
        elevation3: string;
        accent1: string;
        accent2: string;
        accent3: string;
        highlight1: string;
        highlight2: string;
        highlight3: string;
        vivid1: string;
        folderWidgetColor: string;
        folderTextColor: string;
        toolTipBackground: string;
        toolTipText: string;
    };
    radii: {
        xs: string;
        sm: string;
        lg: string;
    };
    space: {
        xs: string;
        sm: string;
        md: string;
        rowGap: string;
        colGap: string;
    };
    fonts: {
        mono: string;
        sans: string;
    };
    fontSizes: {
        root: string;
        toolTip: string;
    };
    sizes: {
        rootWidth: string;
        controlWidth: string;
        numberInputMinWidth: string;
        scrubberWidth: string;
        scrubberHeight: string;
        rowHeight: string;
        folderTitleHeight: string;
        checkboxSize: string;
        joystickWidth: string;
        joystickHeight: string;
        colorPickerWidth: string;
        colorPickerHeight: string;
        imagePreviewWidth: string;
        imagePreviewHeight: string;
        monitorHeight: string;
        titleBarHeight: string;
    };
    shadows: {
        level1: string;
        level2: string;
    };
    borderWidths: {
        root: string;
        input: string;
        focus: string;
        hover: string;
        active: string;
        folder: string;
    };
    fontWeights: {
        label: string;
        folder: string;
        button: string;
    };
}, {
    $flex: unknown;
    $flexCenter: unknown;
    $reset: unknown;
    $draggable: unknown;
    $focus: string;
    $focusWithin: string;
    $hover: string;
    $active: string;
    $inputStyle: string;
    $focusStyle: string;
    $hoverStyle: string;
    $activeStyle: string;
}, import("@stitches/react").CSSPropertiesToTokenScale>>) & {
    defaultVariants?: { [a_1 in keyof Vars[k]]?: keyof Vars[k][a_1] | undefined; } | undefined;
} & {
    compoundVariants?: ({ [a_2 in keyof Vars[k]]?: keyof Vars[k][a_2] | undefined; } & {
        css?: import("@stitches/react").InternalCSS<import("@stitches/react").TMedias, {
            colors: {
                elevation1: string;
                elevation2: string;
                elevation3: string;
                accent1: string;
                accent2: string;
                accent3: string;
                highlight1: string;
                highlight2: string;
                highlight3: string;
                vivid1: string;
                folderWidgetColor: string;
                folderTextColor: string;
                toolTipBackground: string;
                toolTipText: string;
            };
            radii: {
                xs: string;
                sm: string;
                lg: string;
            };
            space: {
                xs: string;
                sm: string;
                md: string;
                rowGap: string;
                colGap: string;
            };
            fonts: {
                mono: string;
                sans: string;
            };
            fontSizes: {
                root: string;
                toolTip: string;
            };
            sizes: {
                rootWidth: string;
                controlWidth: string;
                numberInputMinWidth: string;
                scrubberWidth: string;
                scrubberHeight: string;
                rowHeight: string;
                folderTitleHeight: string;
                checkboxSize: string;
                joystickWidth: string;
                joystickHeight: string;
                colorPickerWidth: string;
                colorPickerHeight: string;
                imagePreviewWidth: string;
                imagePreviewHeight: string;
                monitorHeight: string;
                titleBarHeight: string;
            };
            shadows: {
                level1: string;
                level2: string;
            };
            borderWidths: {
                root: string;
                input: string;
                focus: string;
                hover: string;
                active: string;
                folder: string;
            };
            fontWeights: {
                label: string;
                folder: string;
                button: string;
            };
        }, {
            $flex: unknown;
            $flexCenter: unknown;
            $reset: unknown;
            $draggable: unknown;
            $focus: string;
            $focusWithin: string;
            $hover: string;
            $active: string;
            $inputStyle: string;
            $focusStyle: string;
            $hoverStyle: string;
            $activeStyle: string;
        }, import("@stitches/react").CSSPropertiesToTokenScale> | undefined;
    })[] | undefined;
}; }) => import("@stitches/react").IStyledRule<import("@stitches/react").InferRestVariants<Vars>, import("@stitches/react").TMedias, {
    colors: {
        elevation1: string;
        elevation2: string;
        elevation3: string;
        accent1: string;
        accent2: string;
        accent3: string;
        highlight1: string;
        highlight2: string;
        highlight3: string;
        vivid1: string;
        folderWidgetColor: string;
        folderTextColor: string;
        toolTipBackground: string;
        toolTipText: string;
    };
    radii: {
        xs: string;
        sm: string;
        lg: string;
    };
    space: {
        xs: string;
        sm: string;
        md: string;
        rowGap: string;
        colGap: string;
    };
    fonts: {
        mono: string;
        sans: string;
    };
    fontSizes: {
        root: string;
        toolTip: string;
    };
    sizes: {
        rootWidth: string;
        controlWidth: string;
        numberInputMinWidth: string;
        scrubberWidth: string;
        scrubberHeight: string;
        rowHeight: string;
        folderTitleHeight: string;
        checkboxSize: string;
        joystickWidth: string;
        joystickHeight: string;
        colorPickerWidth: string;
        colorPickerHeight: string;
        imagePreviewWidth: string;
        imagePreviewHeight: string;
        monitorHeight: string;
        titleBarHeight: string;
    };
    shadows: {
        level1: string;
        level2: string;
    };
    borderWidths: {
        root: string;
        input: string;
        focus: string;
        hover: string;
        active: string;
        folder: string;
    };
    fontWeights: {
        label: string;
        folder: string;
        button: string;
    };
}, {
    $flex: unknown;
    $flexCenter: unknown;
    $reset: unknown;
    $draggable: unknown;
    $focus: string;
    $focusWithin: string;
    $hover: string;
    $active: string;
    $inputStyle: string;
    $focusStyle: string;
    $hoverStyle: string;
    $activeStyle: string;
}, import("@stitches/react").CSSPropertiesToTokenScale>, theme: {
    (theme: Partial<{
        colors: Partial<{
            elevation1: string;
            elevation2: string;
            elevation3: string;
            accent1: string;
            accent2: string;
            accent3: string;
            highlight1: string;
            highlight2: string;
            highlight3: string;
            vivid1: string;
            folderWidgetColor: string;
            folderTextColor: string;
            toolTipBackground: string;
            toolTipText: string;
        }>;
        radii: Partial<{
            xs: string;
            sm: string;
            lg: string;
        }>;
        space: Partial<{
            xs: string;
            sm: string;
            md: string;
            rowGap: string;
            colGap: string;
        }>;
        fonts: Partial<{
            mono: string;
            sans: string;
        }>;
        fontSizes: Partial<{
            root: string;
            toolTip: string;
        }>;
        sizes: Partial<{
            rootWidth: string;
            controlWidth: string;
            numberInputMinWidth: string;
            scrubberWidth: string;
            scrubberHeight: string;
            rowHeight: string;
            folderTitleHeight: string;
            checkboxSize: string;
            joystickWidth: string;
            joystickHeight: string;
            colorPickerWidth: string;
            colorPickerHeight: string;
            imagePreviewWidth: string;
            imagePreviewHeight: string;
            monitorHeight: string;
            titleBarHeight: string;
        }>;
        shadows: Partial<{
            level1: string;
            level2: string;
        }>;
        borderWidths: Partial<{
            root: string;
            input: string;
            focus: string;
            hover: string;
            active: string;
            folder: string;
        }>;
        fontWeights: Partial<{
            label: string;
            folder: string;
            button: string;
        }>;
    }>): import("@stitches/react").ThemeRule & string;
    (themeName: string, theme: Partial<{
        colors: Partial<{
            elevation1: string;
            elevation2: string;
            elevation3: string;
            accent1: string;
            accent2: string;
            accent3: string;
            highlight1: string;
            highlight2: string;
            highlight3: string;
            vivid1: string;
            folderWidgetColor: string;
            folderTextColor: string;
            toolTipBackground: string;
            toolTipText: string;
        }>;
        radii: Partial<{
            xs: string;
            sm: string;
            lg: string;
        }>;
        space: Partial<{
            xs: string;
            sm: string;
            md: string;
            rowGap: string;
            colGap: string;
        }>;
        fonts: Partial<{
            mono: string;
            sans: string;
        }>;
        fontSizes: Partial<{
            root: string;
            toolTip: string;
        }>;
        sizes: Partial<{
            rootWidth: string;
            controlWidth: string;
            numberInputMinWidth: string;
            scrubberWidth: string;
            scrubberHeight: string;
            rowHeight: string;
            folderTitleHeight: string;
            checkboxSize: string;
            joystickWidth: string;
            joystickHeight: string;
            colorPickerWidth: string;
            colorPickerHeight: string;
            imagePreviewWidth: string;
            imagePreviewHeight: string;
            monitorHeight: string;
            titleBarHeight: string;
        }>;
        shadows: Partial<{
            level1: string;
            level2: string;
        }>;
        borderWidths: Partial<{
            root: string;
            input: string;
            focus: string;
            hover: string;
            active: string;
            folder: string;
        }>;
        fontWeights: Partial<{
            label: string;
            folder: string;
            button: string;
        }>;
    }>): import("@stitches/react").ThemeRule & string;
} & {
    colors: {
        elevation1: import("@stitches/react").ThemeToken;
        elevation2: import("@stitches/react").ThemeToken;
        elevation3: import("@stitches/react").ThemeToken;
        accent1: import("@stitches/react").ThemeToken;
        accent2: import("@stitches/react").ThemeToken;
        accent3: import("@stitches/react").ThemeToken;
        highlight1: import("@stitches/react").ThemeToken;
        highlight2: import("@stitches/react").ThemeToken;
        highlight3: import("@stitches/react").ThemeToken;
        vivid1: import("@stitches/react").ThemeToken;
        folderWidgetColor: import("@stitches/react").ThemeToken;
        folderTextColor: import("@stitches/react").ThemeToken;
        toolTipBackground: import("@stitches/react").ThemeToken;
        toolTipText: import("@stitches/react").ThemeToken;
    };
    radii: {
        xs: import("@stitches/react").ThemeToken;
        sm: import("@stitches/react").ThemeToken;
        lg: import("@stitches/react").ThemeToken;
    };
    space: {
        xs: import("@stitches/react").ThemeToken;
        sm: import("@stitches/react").ThemeToken;
        md: import("@stitches/react").ThemeToken;
        rowGap: import("@stitches/react").ThemeToken;
        colGap: import("@stitches/react").ThemeToken;
    };
    fonts: {
        mono: import("@stitches/react").ThemeToken;
        sans: import("@stitches/react").ThemeToken;
    };
    fontSizes: {
        root: import("@stitches/react").ThemeToken;
        toolTip: import("@stitches/react").ThemeToken;
    };
    sizes: {
        rootWidth: import("@stitches/react").ThemeToken;
        controlWidth: import("@stitches/react").ThemeToken;
        numberInputMinWidth: import("@stitches/react").ThemeToken;
        scrubberWidth: import("@stitches/react").ThemeToken;
        scrubberHeight: import("@stitches/react").ThemeToken;
        rowHeight: import("@stitches/react").ThemeToken;
        folderTitleHeight: import("@stitches/react").ThemeToken;
        checkboxSize: import("@stitches/react").ThemeToken;
        joystickWidth: import("@stitches/react").ThemeToken;
        joystickHeight: import("@stitches/react").ThemeToken;
        colorPickerWidth: import("@stitches/react").ThemeToken;
        colorPickerHeight: import("@stitches/react").ThemeToken;
        imagePreviewWidth: import("@stitches/react").ThemeToken;
        imagePreviewHeight: import("@stitches/react").ThemeToken;
        monitorHeight: import("@stitches/react").ThemeToken;
        titleBarHeight: import("@stitches/react").ThemeToken;
    };
    shadows: {
        level1: import("@stitches/react").ThemeToken;
        level2: import("@stitches/react").ThemeToken;
    };
    borderWidths: {
        root: import("@stitches/react").ThemeToken;
        input: import("@stitches/react").ThemeToken;
        focus: import("@stitches/react").ThemeToken;
        hover: import("@stitches/react").ThemeToken;
        active: import("@stitches/react").ThemeToken;
        folder: import("@stitches/react").ThemeToken;
    };
    fontWeights: {
        label: import("@stitches/react").ThemeToken;
        folder: import("@stitches/react").ThemeToken;
        button: import("@stitches/react").ThemeToken;
    };
}, _global: (definition: import("@stitches/react").DeclarationListWithRootAtRules | import("@stitches/react").OmitKey<Record<string, import("@stitches/react").InternalCSS<import("@stitches/react").TMedias, {
    colors: {
        elevation1: string;
        elevation2: string;
        elevation3: string;
        accent1: string;
        accent2: string;
        accent3: string;
        highlight1: string;
        highlight2: string;
        highlight3: string;
        vivid1: string;
        folderWidgetColor: string;
        folderTextColor: string;
        toolTipBackground: string;
        toolTipText: string;
    };
    radii: {
        xs: string;
        sm: string;
        lg: string;
    };
    space: {
        xs: string;
        sm: string;
        md: string;
        rowGap: string;
        colGap: string;
    };
    fonts: {
        mono: string;
        sans: string;
    };
    fontSizes: {
        root: string;
        toolTip: string;
    };
    sizes: {
        rootWidth: string;
        controlWidth: string;
        numberInputMinWidth: string;
        scrubberWidth: string;
        scrubberHeight: string;
        rowHeight: string;
        folderTitleHeight: string;
        checkboxSize: string;
        joystickWidth: string;
        joystickHeight: string;
        colorPickerWidth: string;
        colorPickerHeight: string;
        imagePreviewWidth: string;
        imagePreviewHeight: string;
        monitorHeight: string;
        titleBarHeight: string;
    };
    shadows: {
        level1: string;
        level2: string;
    };
    borderWidths: {
        root: string;
        input: string;
        focus: string;
        hover: string;
        active: string;
        folder: string;
    };
    fontWeights: {
        label: string;
        folder: string;
        button: string;
    };
}, {
    $flex: unknown;
    $flexCenter: unknown;
    $reset: unknown;
    $draggable: unknown;
    $focus: string;
    $focusWithin: string;
    $hover: string;
    $active: string;
    $inputStyle: string;
    $focusStyle: string;
    $hoverStyle: string;
    $activeStyle: string;
}, import("@stitches/react").CSSPropertiesToTokenScale>>, "@font-face" | "@import">) => import("@stitches/react").GlobalRule, keyframes: (definition: {
    [k: string]: import("@stitches/react").FlatInternalCSS<import("@stitches/react").TMedias, {
        colors: {
            elevation1: string;
            elevation2: string;
            elevation3: string;
            accent1: string;
            accent2: string;
            accent3: string;
            highlight1: string;
            highlight2: string;
            highlight3: string;
            vivid1: string;
            folderWidgetColor: string;
            folderTextColor: string;
            toolTipBackground: string;
            toolTipText: string;
        };
        radii: {
            xs: string;
            sm: string;
            lg: string;
        };
        space: {
            xs: string;
            sm: string;
            md: string;
            rowGap: string;
            colGap: string;
        };
        fonts: {
            mono: string;
            sans: string;
        };
        fontSizes: {
            root: string;
            toolTip: string;
        };
        sizes: {
            rootWidth: string;
            controlWidth: string;
            numberInputMinWidth: string;
            scrubberWidth: string;
            scrubberHeight: string;
            rowHeight: string;
            folderTitleHeight: string;
            checkboxSize: string;
            joystickWidth: string;
            joystickHeight: string;
            colorPickerWidth: string;
            colorPickerHeight: string;
            imagePreviewWidth: string;
            imagePreviewHeight: string;
            monitorHeight: string;
            titleBarHeight: string;
        };
        shadows: {
            level1: string;
            level2: string;
        };
        borderWidths: {
            root: string;
            input: string;
            focus: string;
            hover: string;
            active: string;
            folder: string;
        };
        fontWeights: {
            label: string;
            folder: string;
            button: string;
        };
    }, {
        $flex: unknown;
        $flexCenter: unknown;
        $reset: unknown;
        $draggable: unknown;
        $focus: string;
        $focusWithin: string;
        $hover: string;
        $active: string;
        $inputStyle: string;
        $focusStyle: string;
        $hoverStyle: string;
        $activeStyle: string;
    }, import("@stitches/react").CSSPropertiesToTokenScale>;
}) => import("@stitches/react").GlobalRule;
